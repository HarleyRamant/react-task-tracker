{"version":3,"sources":["components/Button.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","console","log","Header","props","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAEMA,EAAS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAC3B,OACI,wBAAQA,QAASA,EAASC,MAAO,CAAEC,gBAAiBJ,GAAQK,UAAU,MAAtE,SAA6EJ,KAIrFF,EAAOO,aAAe,CAClBN,MAAO,YACPC,KAAM,SACNC,QAAS,WACLK,QAAQC,IAAI,8BAULT,QChBTU,EAAS,SAACC,GAKZ,OACI,yBAAQL,UAAU,SAAlB,UACI,6BAAKK,EAAMC,QACX,cAAC,EAAD,CAAQX,MAAM,QAAQC,KAAK,MAAMC,QAPzB,WACZK,QAAQC,IAAI,YAOR,cAAC,EAAD,QAOZC,EAAOH,aAAe,CAClBK,MAAO,gBAUX,IAKeF,IC3BAG,MATf,WAEE,OACE,qBAAKP,UAAU,YAAf,SACE,cAAC,EAAD,OCMSQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3a975ce4.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n    return (\r\n        <button onClick={onClick} style={{ backgroundColor: color}} className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n    text: 'Button',\r\n    onClick: () => {\r\n        console.log('No click action defined.');\r\n    },\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n//You can deconstruct props =>     use \"{ title }\" instead of \"props\" so you can access \"{title}\" instead of \"{props.title}\"\r\n\r\n//Inline CSS\r\nconst Header = (props) => {\r\n    const onClick = () => {\r\n        console.log('Click');\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{props.title}</h1>\r\n            <Button color='green' text='Add' onClick={onClick}/>\r\n            <Button />\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n//When nothing is passed as argument of props, use the default value given below.\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\n//Optionaly you can define what type the props properties have to be.\r\nHeader.propTypes = {\r\n    title: PropTypes.string,\r\n}\r\n\r\n//To use inline css, add style={{color: 'red', backgroundColor: 'black'}} to the element.\r\n//To use this style, add style={headingStyle} to the element\r\nconst headingStyle = {\r\n    color: 'red',\r\n    backgroundColor: 'black'\r\n}\r\n\r\nexport default Header\r\n","import Header from './components/Header'\n\nfunction App() {\n\n  return (\n    <div className=\"container\">\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}